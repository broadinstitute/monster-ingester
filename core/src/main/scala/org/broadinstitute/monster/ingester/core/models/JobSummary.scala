package org.broadinstitute.monster.ingester.core.models

import java.time.OffsetDateTime
import java.util.UUID

import io.circe.{Decoder, Encoder}
import io.circe.derivation.{deriveDecoder, deriveEncoder}
import org.broadinstitute.monster.ingester.jade.models.JobStatus

/**
  * Class to capture the information provided when enumerating job statuses.
  *
  * @param jadeId the Id of the job generated by the Jade API.
  * @param status the current status of the job.
  * @param path the path to the file(s) to ingest.
  * @param table the table name in the Repo to ingest to.
  * @param submitted the time at which this job was submitted to the Jade API.
  * @param completed the time at which this job was completed.
  */
case class JobSummary(
  jadeId: Option[UUID] = None,
  status: JobStatus,
  path: String,
  table: String,
  submitted: Option[OffsetDateTime] = None,
  completed: Option[OffsetDateTime] = None
)

object JobSummary {
  implicit val decoder: Decoder[JobSummary] = deriveDecoder
  implicit val encoder: Encoder[JobSummary] = deriveEncoder
}
